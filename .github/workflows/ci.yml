name: ImmersionKit CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: macos-14
    strategy:
      matrix:
        platform: [iOS, macOS, tvOS, watchOS]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_15.4.app

      - name: Cache SPM
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            .build
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build & Test (${{ matrix.platform }})
        run: |
          set -euo pipefail
          SCHEME="ImmersionKit"
          case "${{ matrix.platform }}" in
            iOS)
              xcodebuild test \
                -scheme "$SCHEME" \
                -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.5' \
                -skipPackagePluginValidation
              ;;
            macOS)
              swift build --configuration debug
              swift test  --configuration debug
              ;;
            tvOS)
              xcodebuild test \
                -scheme "$SCHEME" \
                -destination 'platform=tvOS Simulator,name=Apple TV 4K (3rd generation),OS=17.5' \
                -skipPackagePluginValidation
              ;;
            watchOS)
              xcodebuild build \
                -scheme "$SCHEME" \
                -destination 'platform=watchOS Simulator,name=Apple Watch Series 9 (45mm),OS=10.5' \
                -skipPackagePluginValidation
              ;;
          esac
