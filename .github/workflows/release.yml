name: ImmersionKit Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: macos-14
    env:
      SCHEME: ImmersionKit
      CONFIG: Release
      BUILD_DIR: ${{ github.workspace }}/build
      XCFRAMEWORK_ZIP: ImmersionKit.xcframework.zip

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_15.4.app

      - name: Cache SPM
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            .build
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Archive (iOS)
        run: |
          xcodebuild archive -scheme "$SCHEME" -configuration "$CONFIG" \
            -destination "generic/platform=iOS" \
            -archivePath "$BUILD_DIR/ios" \
            SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES CODE_SIGNING_ALLOWED=NO

      - name: Archive (iOS Simulator)
        run: |
          xcodebuild archive -scheme "$SCHEME" -configuration "$CONFIG" \
            -destination "generic/platform=iOS Simulator" \
            -archivePath "$BUILD_DIR/ios-sim" \
            SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES CODE_SIGNING_ALLOWED=NO

      - name: Archive (macOS)
        run: |
          xcodebuild archive -scheme "$SCHEME" -configuration "$CONFIG" \
            -destination "generic/platform=macOS" \
            -archivePath "$BUILD_DIR/macos" \
            SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES CODE_SIGNING_ALLOWED=NO

      - name: Archive (tvOS)
        run: |
          xcodebuild archive -scheme "$SCHEME" -configuration "$CONFIG" \
            -destination "generic/platform=tvOS" \
            -archivePath "$BUILD_DIR/tvos" \
            SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES CODE_SIGNING_ALLOWED=NO

      - name: Archive (tvOS Simulator)
        run: |
          xcodebuild archive -scheme "$SCHEME" -configuration "$CONFIG" \
            -destination "generic/platform=tvOS Simulator" \
            -archivePath "$BUILD_DIR/tvos-sim" \
            SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES CODE_SIGNING_ALLOWED=NO

      - name: Archive (watchOS)
        run: |
          xcodebuild archive -scheme "$SCHEME" -configuration "$CONFIG" \
            -destination "generic/platform=watchOS" \
            -archivePath "$BUILD_DIR/watchos" \
            SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES CODE_SIGNING_ALLOWED=NO

      - name: Archive (watchOS Simulator)
        run: |
          xcodebuild archive -scheme "$SCHEME" -configuration "$CONFIG" \
            -destination "generic/platform=watchOS Simulator" \
            -archivePath "$BUILD_DIR/watchos-sim" \
            SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES CODE_SIGNING_ALLOWED=NO

      - name: Create XCFramework
        run: |
          set -euo pipefail
          xcodebuild -create-xcframework \
            -framework "$BUILD_DIR/ios.xcarchive/Products/Library/Frameworks/${SCHEME}.framework" \
            -framework "$BUILD_DIR/ios-sim.xcarchive/Products/Library/Frameworks/${SCHEME}.framework" \
            -framework "$BUILD_DIR/macos.xcarchive/Products/Library/Frameworks/${SCHEME}.framework" \
            -framework "$BUILD_DIR/tvos.xcarchive/Products/Library/Frameworks/${SCHEME}.framework" \
            -framework "$BUILD_DIR/tvos-sim.xcarchive/Products/Library/Frameworks/${SCHEME}.framework" \
            -framework "$BUILD_DIR/watchos.xcarchive/Products/Library/Frameworks/${SCHEME}.framework" \
            -framework "$BUILD_DIR/watchos-sim.xcarchive/Products/Library/Frameworks/${SCHEME}.framework" \
            -output "$BUILD_DIR/${SCHEME}.xcframework"

      - name: Zip XCFramework
        run: |
          cd "$BUILD_DIR"
          /usr/bin/zip -r "${XCFRAMEWORK_ZIP}" "${SCHEME}.xcframework"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/${{ env.XCFRAMEWORK_ZIP }}
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
